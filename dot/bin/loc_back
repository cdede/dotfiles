#!/usr/bin/python
from contextlib import contextmanager
import os
import argparse

def arg_parse():
    "Parse the command line arguments"
    parser = argparse.ArgumentParser()
    parser.add_argument("--packages", action="store_true",
                      help="pacman packages", default=False)
    parser.add_argument("--sign_key", action="store_true", 
                      help="sign key ", default=False)
    parser.add_argument('-s', "--sudo_key", help="sudo key ",
            action="store_true", default=False)
    parser.add_argument('-t', "--test", help="print cmds ",
            action="store_true", default=False)
    return parser.parse_args()

@contextmanager
def pushd(new_dir):
    previous = os.getcwd()
    os.chdir(new_dir)
    yield
    os.chdir(previous)

class RunCmd(object):
    def __init__(self ,cmds,path = ''):
        self.cmds = cmds
        self.path = path

    def run_flag(self):
        ret1 = 0
        for f1 in self.cmds:
            with pushd(self.path):
                ret1 += os.system(f1)
        return ret1

    def __str__(self):
        return ''.join([i+os.linesep for i in self.cmds])

def main():
    args = arg_parse()
    p1 = os.path.expanduser('~/.config/priv1')
    cmd = []
    if args.packages:
        cmd.append( '~/bin/cpmv.py' )
    if args.sign_key:
        cmd.append( 'gpg -v  ~/.config/priv2/test.kdb.sig  ' )
    if args.sudo_key:
        cmd.append('gpg --quiet --batch -o - %s |zcat  | sed -n "$(expr $(sudo /etc/sudo_bin/no_pass -g) + 1),+1p"' % 'wz9hJi6.gz.gpg' )

    r1 = RunCmd(cmd,p1)
    if args.test:
        print (str(r1))
    else:
        a1 = r1.run_flag()

if __name__ == '__main__':
    main()
